#!/bin/sh

# Clear config.mk
echo -n >config.mk
CPARAMS="$*"

find_deps () {
  make testdeps
}

if [ -z "$1" ]; then
  modules=`grep ifneq modules.mk  |  cut -d '_' -f 2 |  cut -d ')' -f 1 | tr '[:upper:]' '[:lower:]'`
  for m in $modules; do
    M=`echo $m | tr '[:lower:]'  '[:upper:]'`
    echo -n "Testing module $m: "
    if make testdeps MOD_$M=1 >/dev/null 2>&1; then
      cmdline="$cmdline --with-mod-$m"
      echo "OK"
    else
      echo "Missing dependencies."
    fi
  done
  exec $0 $cmdline
fi

echo
echo "Configure script for obnova. For now, we really do only basic setup."

while [ -n "$1" ]; do
 case $1 in
--help)
  modules=`grep ifneq modules.mk  |  cut -d '_' -f 2 |  cut -d ')' -f 1 | tr '[:upper:]' '[:lower:]'`
  echo -n "$0  [--with-mod-all] {[--enable-new] | [--with-zabbix hostname] [--with-server hostname]} "
  echo -n " [--with-ssh-dir directory] "
  for m in $modules; do
    echo -n " [--with-mod-$m]"
  done
  echo
  exit
  ;;
--with-mod-all)
   modules=`grep ifneq modules.mk  |  cut -d '_' -f 2 |  cut -d ')' -f 1 | tr '[:upper:]' '[:lower:]'`
   for m in $modules; do
     echo "Enabling module $m"
     M=`echo $m | tr '[:lower:]'  '[:upper:]'`
     echo "MOD_$M = 1" >>config.mk
   done
  ;;
--with-mod-*)
  module=`echo $1 | cut -d - -f 5 | tr '[:lower:]' '[:upper:]'`
  echo "Enabling module $module"
  echo "MOD_$module = 1" >>config.mk
  ;;
--enable-new)
  if [ -n "$ip" ] || [ -n "$zabbix" ]; then
    echo "--with-server cannot be used with zabbix server or obnova server."
    exit 1
  fi
  echo "Enabling new obnova system"
  echo "OBNOVANG = 1" >>config.mk
  OBNOVANG=1
  ;;
--with-server)
  if [ -n "$OBNOVANG" ]; then
    echo "--with-server deprecated for new obnova system."
    exit 1
  fi
  ip="$2"
  echo "serverip=$2" >>config.mk
  shift;
 ;;
--with-ssh-dir)
  if [ -n "$2" ]; then
    echo "SSHDIR=$2" >>config.mk
  else
    echo "--with-ssh-dir directory"
  fi
 ;;
--with-zabbix)
  if [ -n "$OBNOVANG" ]; then
    echo "--with-zabbix deprecated for new obnova system."
    exit 1
  fi
  zabbix="$2"
  echo "zabbixserver=$2" >>config.mk
  shift
  ;;
--with-kernel)
  kver="$2"
  echo "KVERSION=$2" >>config.mk
  shift
  ;;
 esac
 shift
done

if ! find_deps; then
  echo "You have to resolve above problems and install missing software! Exiting."
  echo
  exit 1
fi

echo ./configure $CPARAMS > config.log
echo "OK, we are configured. Now run make. Parameters of configure saved to config.log"
echo

