#!/bin/sh
#
# This script is part of OBNOVA system by Lukas Kubin,
# http://obnova.sourceforge.net
#
# Copyright (C) 2003,2004 Lukas Kubin
# 
# This program is free software; you can redistribute it and/or
# modify it under the terms of the GNU General Public License
# as published by the Free Software Foundation; either version 2
# of the License, or (at your option) any later version.
# 
# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
# 
# You should have received a copy of the GNU General Public License
# along with this program; if not, write to the Free Software
# Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA  02111-1307, USA.
#

. /etc/obnova.conf
. /etc/common-functions

#
# Ensure the Obnova data files are
# currently not being updated
#
checkBusyGroup

ALLENTRIES=$(grep -v "^#" $COMPLIST | sed -e "s/\(.*\)\#.*/\1/" | grep -i $MAC | cut -d"," -f3-)
REG_WORKGROUP=$(echo $ALLENTRIES|cut -d"," -f1)
REG_POPIS=$(echo $ALLENTRIES|cut -d"," -f2)

#
# Do the sync for each partition available
#
if getcmdflag udpreceiver || getcmdflag udpsender || getcmdflag rbsender || getcmdflag rbreceiver; then
 ucpart=$(getcmdvar ucpart)
 if [ -z "$ucpart" ]; then
	echo -e "Nepodarilo se zjistit partitions pro udpcast nebo rsync block"
	sleep 50
	exitfunc 1
 fi
 if getcmdflag compr; then
   export compression=lzop
   export rsynccomp="-z"
 fi
 if getcmdflag udpsender; then
  echo -e "Spoustim UDPCAST sender na $ucpart"
  /bin/udpcast sender $ucpart
  ret=$?
  echo "Done (code $ret)"
  exitfunc $ret
 fi
 if getcmdflag udpreceiver; then
  echo -e "Spoustim UDPCAST receiver na $ucpart"
  /bin/udpcast receiver $ucpart
  ret=$?
  echo "Done (code $ret)"
  exitfunc $ret
 fi
 if getcmdflag rbreceiver; then
   echo -e "Spoustim RSYNC block receiver na $ucpart \(host $(getcompname)\)"
   lpart=$(echo $ucpart| cut -d ':' -f 2)
   host=$(echo $ucpart| cut -d ':' -f 1)
   rsync -P $rsynccomp rsync://$host/disc/disc /dev/$lpart
   exitfunc $?
 fi
 if getcmdflag rbsender; then
   echo -e "Spoustim RSYNC block sender na $ucpart"
   mkdir -p /tmp/rdisc
   cp -a /dev/$ucpart /tmp/rdisc/disc
   rsync --no-detach --daemon --config /etc/rsyncd.conf
   exitfunc $?
 fi
else
 echo -n "Zjistuji dostupne partitions pro obnovu."
 PARTITIONS=$(rsync $OBNOVAPATH/data/$GROUPNAME/base/|sed s'/.* \(.*\)$/\1/'|grep -v "^\.")
 if [ $? -eq 0 ] ; then
	echo -e $TOK
 else
	echo -e $TNOK
	echo -e "Nepodarilo se zjistit dostupne partitions"
 fi
fi

if getcmdflag compr; then
  RSYNC_PARAMS_EXTRASRESTORE="-z $RSYNC_PARAMS_EXTRASRESTORE"
  RSYNC_PARAMS_BASERESTORE="-z $RSYNC_PARAMS_BASERESTORE"
fi

RestorePerms () {
	echo -e $TNS"Obnovuji prava $PARTITION."$TNE
        log 3 "Restoring perms.."
        touch /etc/mtab
        if ntfs-3g.probe --readonly $1 ; then
          ntfs-3g.secaudit -se $1 $2 >/tmp/perms.log 2>&1
	  tail /tmp/perms.log
          log 3 "Restored perms (exit code $?)."
        else
          log 3 "Not NTFS"
        fi
}

for PARTITION in $PARTITIONS
do
	log 3 "starting renewal of $PARTITION"
	#
	# Mount the partition to restore
	#
	MOUNTPOINT=$TMPDIR/$PARTITION
	mountPartition /dev/$PARTITION $MOUNTPOINT

	#
	# First do "fake" extras sync to get list of files to be
	# excluded during base restore
	#
	EXTRASLIST=$TMPDIR/extraslist; rm -f $EXTRASLIST; touch $EXTRASLIST
	EXTRASLISTNEW=$TMPDIR/extraslistnew; rm -f $EXTRASLISTNEW; touch $EXTRASLISTNEW
	if [ "$DATAEXTRASFILESEXISTS" != "false" ]; then
		log 3 "looking for files to extras sync"
		rsync $RSYNC_PARAMS_EXTRASRESTORE -n $OBNOVAPATH/data/$GROUPNAME/extras/$MAC/$PARTITION/ 2>/dev/null \
			| sed "s/^.*[0-9]\{2\}:[0-9]\{2\}:[0-9]\{2\} \(.*\)$/\1/" >> $EXTRASLIST
		#
		# Clean up EXTRASLIST to be passed to base rsync restore
		# as exclude list
		#
		EXTRASLISTLENGTH=$(wc -l $EXTRASLIST|sed 's/^[[:space:]]*\([0-9]*\).*$/\1/')
		cat $EXTRASLIST | sed "1,2d;$(expr $EXTRASLISTLENGTH - 1),${EXTRASLISTLENGTH}d" >> $EXTRASLISTNEW
		rm -f $EXTRASLIST
	fi

	#
	# Do the base restore
	#
	log 2 "doing the base sync (rsync $RSYNC_PARAMS_BASERESTORE $OBNOVAPATH/data/$GROUPNAME/base/$PARTITION/ ${MOUNTPOINT}/)"
	rsync $RSYNC_PARAMS_BASERESTORE $OBNOVAPATH/data/$GROUPNAME/base/$PARTITION/ ${MOUNTPOINT}/ #2>/dev/null>&1
	if [ $? -eq 0 ]; then
		log 3 "base sync OK"
		echo -e $TNS"Obnova diskoveho oddilu $PARTITION byla provedena uspesne."$TNE
		sleep 5
	else
		log 1 "error return code in base sync"
		exit 1
	fi

	#
	# ...and synchronize extras
	#
	if [ "$DATAEXTRASFILESEXISTS" != "false" ]; then log 3 "doing extras sync"
		rsync $RSYNC_PARAMS_EXTRASRESTORE $OBNOVAPATH/data/$GROUPNAME/extras/$MAC/$PARTITION/ ${MOUNTPOINT}/ #2>/dev/null>&1
		if [ $? -eq 0 ]; then
			log 3 "extras sync OK"
			echo -e $TNS"Individualni obnova diskoveho oddilu $PARTITION byla provedena uspesne."$TNE
		else
			log 1 "error return code in extras sync"
			exit 1
		fi
	fi
	rm -f $EXTRASLISTNEW
	#
	# Put selected items into registry 
	#
	COMPNAME=`getcompname`
	REGSYS=`echo $MOUNTPOINT/[Ww][Ii]*/[Ss][Yy]*/[Cc][Oo]*/[Ss][Yy][Ss]*[Mm]`
	REGSW=`echo $MOUNTPOINT/[Ww][Ii]*/[Ss][Yy]*/[Cc][Oo]*/[Ss][Oo][Ff]*[Ee]`
	echo "Software register file: ${REGSYS}"
	echo "System register file: ${REGSW}"
	# Depending on Windows version:
	if [ -f "$REGSW" ] && [ -f "$REGSYS" ]; then
		LABNAME=$(echo $COMPNAME|cut -d"-" -f1)
		# Set NETBIOS computer name
		#
		editreg $REGSYS "ControlSet001/Services/Tcpip/Parameters/NV Hostname" "$COMPNAME"
		editreg $REGSYS "ControlSet001/Services/Tcpip/Parameters/Hostname" "$COMPNAME"
		editreg $REGSYS "ControlSet001/services/Tcpip/Parameters/NV Hostname" "$COMPNAME"
		editreg $REGSYS "ControlSet001/services/Tcpip/Parameters/Hostname" "$COMPNAME"
		editreg $REGSYS "ControlSet001/Control/ComputerName/ComputerName/ComputerName" "$COMPNAME"
		#
	fi
	sleep 4
	if [ -f $MOUNTPOINT/perms ]; then
	  cp $MOUNTPOINT/perms /tmp/
	  umount $MOUNTPOINT
	  RestorePerms /dev/$PARTITION /tmp/perms
	else
	  umount $MOUNTPOINT
	fi
	
done

